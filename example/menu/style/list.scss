/**
 * @author Travis Uribe <travis@turibe.com>
 * @file
 */

*,
*::before,
*::after {
  box-sizing: border-box;
}

:root {
  --menu-bg: lightgray;
  --menu-text-color: black;
  --menu-hover-bg: rgb(27, 82, 203);
  --menu-hover-text-color: white;
  font-size: 24px;
}

//body {
//  overflow: hidden;
//}

body > .menu {
  transform-origin: center;
  rotate: -45deg;
  //position: absolute;
  //left: 0;
  //top: 0;
}

.menu {
  --corner-radius: 1rem;
  --menu-spacing: 1.2rem;
  --half-spacing: calc(var(--menu-spacing) / 2);
  --menu-width: 5rem;

  position: relative;
  z-index: -1;
  display: flex;
  flex-direction: column;
  justify-content: stretch;
  align-items: stretch;
  list-style: none;
  padding: 0;
  margin: 0;
  color: var(--menu-text-color);
  min-width: 12rem;
  border-radius: var(--corner-radius);

  > li {
    display: flex;
    align-items: baseline;
    justify-content: space-between;
    padding: calc(var(--half-spacing) / 1.1) var(--half-spacing);
    background-clip: padding-box;
    white-space: nowrap;
    transform-origin: left top;

    > ul {
      position: absolute;
      top: 0;
      left: 0;
      scale: 1 0;
      transform-origin: top right;
      transition-property: left, opacity, scale;
      transition-duration: 0.5s;
      transition-timing-function: ease-in-out;
    }

    &:not(:hover, .is-hovered) > ul {
      opacity: 0;
    }

    &:hover,
    &.is-hovered {
      background-color: var(--menu-hover-bg);
      color: var(--menu-hover-text-color);
      background-image: linear-gradient(
        to bottom,
        lch(100 1 0 / 0.2),
        transparent
      );

      > ul {
        scale: 1;
        left: 100%;
        opacity: 1;
      }
    }
  }

  li:not(:last-child) {
    content: "";
    border-block-end: 1px solid #aaa;

    &:hover {
      border-block-end-color: transparent;
    }
  }
}

.has-menu {
  display: flex;
  justify-content: space-between;
  position: relative;

  &::after {
    content: "â€º";
    font-size: 1.5rem;
    line-height: 0;
  }
}

.root {
  z-index: 1;
}

@keyframes foo {
  0% {
    transform: translate(50%, 50%);
  }
  100% {
    transform: translate(110%, 110%);
  }
}
